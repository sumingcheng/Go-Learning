package main

import "fmt"

/*
位数	补码中的特殊负数值	二进制表示
8位	    -128		10000000
16位	-32768		10000000 00000000
32位	-2147483648	10000000 00000000 00000000 00000000
*/
func main() {
	count := 0 // 初始化计数器为0

	// 这个循环将遍历从0到255的整数
	for i := range [256]struct{}{} {
		m, n := byte(i), int8(i) // 将i转换为byte和int8类型

		// 检查int8类型的n是否等于其自身的负数
		if n == -n {
			count++ // 如果相等，计数器增加
		}

		// 检查byte类型的m是否等于其自身的负数
		if m == -m {
			count++ // 如果相等，计数器增加
		}
	}

	fmt.Println(count) // 输出计数结果
}
