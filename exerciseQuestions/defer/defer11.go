package main

func main() {
	x := [3]int{0, 1, 2} // 初始化一个整数数组x
	y := [3]*int{}       // 初始化一个整数指针数组y
	z := [3]int{}        // 初始化一个整数数组z

	// Go设计者为了效率，在range循环中重用了变量v。
	// 每次迭代时，v不是新创建的变量，而是同一个变量被重新赋值。
	// 这样做减少了内存分配和垃圾回收的负担，提高了循环的性能。
	for i, v := range x { // 遍历数组x，i是索引，v是值的副本
		defer func() {
			println(v) // 延迟打印当前循环变量v的值
		}() // 注意：这里使用的是闭包

		println(&v)
		z[i] = v
		y[i] = &v // 每次迭代时，v不是新创建的变量，而是同一个变量被重新赋值
	}

	println(*y[0], *y[1], *y[2]) // 打印y数组中各元素所指向的整数值 222
	println(z[0], z[1], z[2])    // 打印z数组中各元素的值 0 1 2
}
